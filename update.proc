#!/bin/bash

PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
#set -x

echo "Update starts ..."
cw=$(pwd)
OBT_DIR="$HOME/build/bin"

[ ! -d $OBT_DIR/update ] && mkdir -p $OBT_DIR/update

logFile="$OBT_DIR/update/update-"$( date "+%Y-%m-%d" )".log"
LONG_DATE=$( date "+%Y-%m-%d %H:%M:%S" )

echo "Update started @ ${LONG_DATE}" >> ${logFile}

if [ ! -d ~/OBT ]
then
   echo "Cloning ..." >> ${logFile}
   echo "Cloning ..." 
   pushd ~/
   res=$( git clone https://github.com/AttilaVamos/OBT.git  2>&1 )
   retCode=$?
   if [[ $retCode -ne 0 ]]
   then
        echo "Cloning the 'https://github.com/AttilaVamos/OBT.git' failed try ' https://github.com/hpcc-systems/OBT.git'" >> ${logFile} 2>&1
        res=$( git clone https://github.com/hpcc-systems/OBT.git  2>&1 )
        retCode=$?
        if [[ $retCode -ne 0 ]]
        then
            echo "Cloning the 'https://github.com/hpcc-systems/OBT.git' failed, give-up." >> ${logFile} 2>&1
            echo "res:$res" >> ${logFile} 2>&1
        else
            echo "Cloning was success." >> ${logFile} 2>&1
            echo "res:$res" >> ${logFile} 2>&1
    else
        echo "Cloning was success." >> ${logFile} 2>&1
        echo "res:$res" >> ${logFile} 2>&1
    fi

   popd
fi

if [ -d ~/OBT ]
then
    pushd ~/OBT

    res=$( git pull origin master 2>&1 )
    retCode=$?
    if [[ $retCode -eq 0 ]]
    then
        echo "${res}"  >> ${logFile}
        echo "${res}"

        cp -u -v * $OBT_DIR/  >> ${logFile} 2>&1

        if [ -n "$OBT_ID" ]
        then
            # Copy machine specific files
            cp -v $OBT_ID/* $OBT_DIR/  >> ${logFile} 2>&1
        else
            echo "OBT_ID is not defined, using default settings.sh." >> ${logFile} 2>&1
            echo "OBT_ID is not defined, using default settings.sh." 
        fi
    else
        echo "Update failed with retCode: $retCode" >> ${logFile} 2>&1
        echo "res:$res" >> ${logFile} 2>&1
    fi

    popd
    echo "Update finished." >> ${logFile} 2>&1
    echo "Update finished."
else
    echo "Update failed, ~/OBT directory not exists."  >> ${logFile} 2>&1
    echo "Update failed, ~/OBT directory not exists."
fi

if [[ -f $OBT_DIR/collections.py ]] 
then
    echo "Remove outdated collections.py*"    >> ${logFile} 2>&1
    echo "$(rm -v $OBT_DIR/collections.py*)"   >> ${logFile} 2>&1
fi

echo "End @ "$( date "+%Y-%m-%d %H:%M:%S" )"."   >> ${logFile} 2>&1
echo "------------------------------------------" >> ${logFile} 2>&1
echo ""   >> ${logFile} 2>&1

bash -c " sleep 1; echo \"self update\"; cp update.proc update.sh "

